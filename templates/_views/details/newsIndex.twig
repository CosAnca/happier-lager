{#
 # Detail View Template â€“ News Index
 # ---------------------------------
 #
 # This template gets loaded when "/news" is requested,
 # because Page Router maps this URI to Detail View for News Index.
 #
 # The page first displays the most recent featured News entry, followed by the
 # remaining News entries in reverse-chronological order.
-#}

{% extends "_views/details/_index" %}


{# Get the most recent featured News entry, regardless of which page we're on #}
{% set featuredEntry = craft.entries({
    section: 'news',
    featuredEntry: 1,
    orderBy: 'postDate desc'
}).one() %}

{# Now set the params for the remaining entries, and paginate them in groups of 4 #}
{% set newsEntriesCriteria = craft.entries({
    section: 'news',
    id: (featuredEntry ? 'not '~featuredEntry.id),
    orderBy: 'postDate desc'
}) %}
{% set isFirstPage = craft.app.request.pageNum == 1 %}
{% set limit = isFirstPage and featuredEntry ? 3 : 4 %}
{% paginate newsEntriesCriteria.limit(limit) as newsEntries %}
{% if isFirstPage and featuredEntry %}
    {# Tack the featured entry onto the front of the list #}
    {% set newsEntries = [featuredEntry]|merge(newsEntries) %}
{% endif %}

{# News index header should be empty #}
{% block view_header %}{% endblock %}

{% block view_main %}
  
  {% include "_components/title" with { 
    self: {
      title: title
    }
  } %}


  <div class="flex">

    {# Loop through this page's News entries #}
    {% for entry in newsEntries %}

      {# Figure out where this entry should link to #}
      {% set url = entry.type.handle == 'link' ? entry.linkUrl : entry.url %}

      {# We give special treatment to the featured entry #}
      {% set isFeaturedEntry = (loop.first and craft.app.request.pageNum == 1) %}

      {% include isFeaturedEntry ? '_routers/feature' : '_routers/teaser' with { entry: entry } %}

    {% endfor %}

    <hr class="horz-rule">

    <div class="pagination">
      <ul>
        {% if paginate.prevUrl %}
          <li><a href="{{ paginate.prevUrl }}" class="pag-prev-link">Previous Page</a></li>
        {% endif %}

        {% for page, url in paginate.getPrevUrls(5) %}
          <li><a href="{{ url }}">{{ page }}</a></li>
        {% endfor %}

        <li class="current">{{ paginate.currentPage }}</li>

        {% for page, url in paginate.getNextUrls(5) %}
          <li><a href="{{ url }}">{{ page }}</a></li>
        {% endfor %}

        {% if paginate.nextUrl %}
          <li><a href="{{ paginate.nextUrl }}" class="pag-next-link">Next Page</a></li>
        {% endif %}
      </ul>
    </div>


  </div>
{% endblock %}
